{"remainingRequest":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\src\\views\\studentweb\\practice\\ModificationCompare.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\src\\views\\studentweb\\practice\\ModificationCompare.vue","mtime":1743855704883},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711182484313},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\babel-loader\\lib\\index.js","mtime":1711182482575},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711182484313},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1711182506214}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ModificationCompare.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ModificationCompare.vue","sourceRoot":"src/views/studentweb/practice","sourcesContent":["<template>\r\n    <div class=\"diff-page\">\r\n        <!-- 旧版本 -->\r\n        <div class=\"diff-column\">\r\n            <div class=\"header\">旧版本</div>\r\n            <div v-for=\"(line, index) in oldLines\" :key=\"'old-' + index\" class=\"line\"\r\n                :class=\"{ 'deleted': line.type === 'removed' }\">\r\n                <span class=\"line-number\">{{ line.oldNum || ' ' }}</span>\r\n                <span class=\"content\">{{ line.content }}</span>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- 新版本 -->\r\n        <div class=\"diff-column\">\r\n            <div class=\"header\">新版本</div>\r\n            <div v-for=\"(line, index) in newLines\" :key=\"'new-' + index\" class=\"line\"\r\n                :class=\"{ 'added': line.type === 'added' }\">\r\n                <span class=\"line-number\">{{ line.newNum || ' ' }}</span>\r\n                <span class=\"content\">{{ line.content }}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport { diff_match_patch } from '../../../api/diff_match_patch'\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            dmp: new diff_match_patch(),\r\n            oldText: '原始文本内容\\n第二行原始内容\\n第三行原始内容',\r\n            patchText: '@@ -1,3 +1,4 @@\\n 原始文本内容\\n-第二行原始内容\\n+第二行修改后的内容\\n+新增的第四行内容\\n 第三行原始内容\\n',\r\n            oldLines: [],\r\n            newLines: []\r\n        }\r\n    },\r\n    mounted() {\r\n        this.loadData()\r\n        this.processDiff()\r\n\r\n    },\r\n    methods: {\r\n        async loadData() {\r\n            try {\r\n                \r\n                const response = await axios.get(\r\n                    'http://localhost:9251/api/modification/getDocByModificationId/6/10',\r\n                );\r\n                console.log(response);\r\n                this.patchText = response.data.modification\r\n                const response2 = await axios.get(\r\n                    'http://localhost:9251/api/docs/6',\r\n                );\r\n                this.oldText = response2.data.txt\r\n                console.log(response2);\r\n                console.log('原始补丁:', this.patchText)\r\n                console.log('原始文本', this.oldText)\r\n                const patches = this.dmp.patch_fromText(this.patchText)\r\n\r\n                // 应用补丁并验证结果\r\n                const [newText, results] = this.dmp.patch_apply(patches, this.oldText)\r\n                if (results.some(success => !success)) {\r\n                    throw new Error('部分补丁应用失败')\r\n                }\r\n\r\n                console.log('应用补丁后的新文本:', newText)\r\n\r\n                // 生成标准差异\r\n                const diffs = this.dmp.diff_main(this.oldText, newText)\r\n                this.dmp.diff_cleanupSemantic(diffs)  // 优化差异显示\r\n\r\n                console.log('标准差异:', !Array.isArray(diffs), !Array.isArray(diffs) || diffs.length < 2)\r\n                // 处理差异结果\r\n                this.generateLines(diffs)\r\n                // this.pagination.total = response.data.data.total || 0;\r\n            } catch (error) {\r\n                console.error('请求异常:', error);\r\n                this.$message.error('数据加载失败');\r\n            }\r\n        },\r\n        // async processDiff() {\r\n        //     try {\r\n        //         // 解析补丁\r\n        //         console.log('原始补丁:', this.patchText)\r\n        //         console.log('原始文本', this.oldText)\r\n        //         const patches = this.dmp.patch_fromText(this.patchText)\r\n\r\n        //         // 应用补丁并验证结果\r\n        //         const [newText, results] = this.dmp.patch_apply(patches, this.oldText)\r\n        //         if (results.some(success => !success)) {\r\n        //             throw new Error('部分补丁应用失败')\r\n        //         }\r\n\r\n        //         console.log('应用补丁后的新文本:', newText)\r\n\r\n        //         // 生成标准差异\r\n        //         const diffs = this.dmp.diff_main(this.oldText, newText)\r\n        //         this.dmp.diff_cleanupSemantic(diffs)  // 优化差异显示\r\n\r\n        //         console.log('标准差异:', !Array.isArray(diffs), !Array.isArray(diffs) || diffs.length < 2)\r\n        //         // 处理差异结果\r\n        //         this.generateLines(diffs)\r\n        //     } catch (error) {\r\n        //         console.error('处理差异失败:', error)\r\n        //         this.$message.error(`版本对比失败: ${error.message}`)\r\n        //     }\r\n        // },\r\n\r\n        generateLines(diffs) {\r\n            let oldLineNum = 1\r\n            let newLineNum = 1\r\n            const oldLines = []\r\n            const newLines = []\r\n\r\n            console.log(diffs)\r\n            // 安全遍历差异\r\n            diffs.forEach(diff => {\r\n                // 添加类型检查\r\n                // if (!Array.isArray(diff) || diff.length < 2) \r\n                // {\r\n                //     console.log('未安全通过类型检查', diff)\r\n                //     return\r\n                // }\r\n                console.log('安全通过类型检查', diff[0])\r\n\r\n                const type = diff[0]\r\n                const content = diff[1]\r\n\r\n\r\n                console.log('处理差异:', content)\r\n                console.log('this.dmp.DIFF_DELETE:', this.dmp.DIFF_DELETE)\r\n                console.log('this.dmp.DIFF_INSERT:', this.dmp.DIFF_INSERT)\r\n                console.log('this.dmp.DIFF_EQUAL:', this.dmp.DIFF_EQUAL)\r\n                const lines = content.split('\\n').filter(l => l !== '')\r\n\r\n                console.log('处理差异:', lines)\r\n                switch (type) {\r\n                    case 1:\r\n                        oldLines.push({\r\n                            content: content,\r\n                            oldNum: oldLineNum++,\r\n                            type: 'removed'\r\n                        })\r\n                        newLines.push({ type: 'empty' })\r\n                        break\r\n\r\n                    case -1:\r\n                        newLines.push({\r\n                            content: content,\r\n                            newNum: newLineNum++,\r\n                            type: 'added'\r\n                        })\r\n                        oldLines.push({ type: 'empty' })\r\n                        break\r\n\r\n                    default:  // DIFF_EQUAL\r\n                        oldLines.push({\r\n                            content: content,\r\n                            oldNum: oldLineNum++,\r\n                            type: 'same'\r\n                        })\r\n                        newLines.push({\r\n                            content: content,\r\n                            newNum: newLineNum++,\r\n                            type: 'same'\r\n                        })\r\n                }\r\n            })\r\n            this.oldLines = oldLines\r\n            this.newLines = newLines\r\n        }\r\n    }\r\n}\r\n</script>\r\n  \r\n<style scoped>\r\n.diff-page {\r\n    display: flex;\r\n    gap: 20px;\r\n    padding: 20px;\r\n    font-family: monospace;\r\n}\r\n\r\n.diff-column {\r\n    flex: 1;\r\n    border: 1px solid #e1e4e8;\r\n    border-radius: 6px;\r\n}\r\n\r\n.header {\r\n    padding: 10px;\r\n    background: #f6f8fa;\r\n    border-bottom: 1px solid #e1e4e8;\r\n    font-weight: bold;\r\n}\r\n\r\n.line {\r\n    display: flex;\r\n    padding: 2px 10px;\r\n}\r\n\r\n.line-number {\r\n    min-width: 40px;\r\n    color: rgba(27, 31, 35, .3);\r\n    padding-right: 10px;\r\n    user-select: none;\r\n}\r\n\r\n.deleted {\r\n    background-color: #ffeef0;\r\n}\r\n\r\n.added {\r\n    background-color: #e6ffed;\r\n}\r\n\r\n.content {\r\n    white-space: pre-wrap;\r\n}\r\n</style>"]}]}