{"remainingRequest":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\src\\views\\scoremanagement\\Detail.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\src\\views\\scoremanagement\\Detail.vue","mtime":1743861233759},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1711182487975},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1711182506221},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\postcss-loader\\src\\index.js","mtime":1711182496599},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711182484313},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1711182506214}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouYW5ub3RhdGlvbiB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogeWVsbG93Ow0KICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICBwb3NpdGlvbjogcmVsYXRpdmU7DQp9DQoNCi5hbm5vdGF0aW9uOmhvdmVyOjphZnRlciB7DQogICAgY29udGVudDogYXR0cihkYXRhLWNvbW1lbnQpOw0KICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjOw0KICAgIHBhZGRpbmc6IDhweDsNCiAgICB6LWluZGV4OiAxMDA7DQogICAgdG9wOiAxMDAlOw0KICAgIGxlZnQ6IDA7DQp9DQo="},{"version":3,"sources":["Detail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Detail.vue","sourceRoot":"src/views/scoremanagement","sourcesContent":["<template>\r\n    <!-- 教师端 -->\r\n    <div class=\"container\" v-if=\"isTeacher\">\r\n        <div class=\"article-content\" @mouseup=\"handleTextSelection\" v-html=\"annotatedContent\">\r\n        </div>\r\n\r\n        <dialog ref=\"commentDialog\">\r\n            <textarea v-model=\"currentComment\"></textarea>\r\n            <button @click=\"saveAnnotation\">保存批注</button>\r\n        </dialog>\r\n    </div>\r\n\r\n    <!-- 学生端 -->\r\n    <div class=\"container\" v-else>\r\n        <div class=\"article-content\" v-html=\"annotatedContent\"></div>\r\n    </div>\r\n</template>\r\n  \r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue'\r\n\r\n// 假设的原始文章内容\r\nconst originalText = `这是一个示例文章内容，用于演示批注功能。教师可以选择任意文本段落添加批注，学生可以看到带有批注标记的文本。`\r\n\r\n// 批注数据存储结构示例：\r\n// [{ start: 5, end: 8, comment: \"注意用词\" }, ...]\r\nconst annotations = ref([])\r\nconst isTeacher = ref(true)\r\nconst currentComment = ref('')\r\nconst currentSelection = ref(null)\r\nconst commentDialog = ref(null)\r\n\r\n// 序列化后的批注字符串\r\nconst serializedAnnotations = computed(() =>\r\n    JSON.stringify(annotations.value)\r\n)\r\n\r\n// 处理文本选择\r\nfunction handleTextSelection() {\r\n    const selection = window.getSelection()\r\n    if (!selection.rangeCount) return\r\n\r\n    const range = selection.getRangeAt(0)\r\n    const preSelectionRange = range.cloneRange()\r\n    preSelectionRange.selectNodeContents(document.querySelector('.article-content'))\r\n    preSelectionRange.setEnd(range.startContainer, range.startOffset)\r\n\r\n    currentSelection.value = {\r\n        text: selection.toString(),\r\n        startOffset: preSelectionRange.toString().length,\r\n        endOffset: preSelectionRange.toString().length + selection.toString().length\r\n    }\r\n\r\n    commentDialog.value.showModal()\r\n}\r\n\r\n// 保存批注\r\nfunction saveAnnotation() {\r\n    annotations.value.push({\r\n        ...currentSelection.value,\r\n        comment: currentComment.value\r\n    })\r\n    currentComment.value = ''\r\n    commentDialog.value.close()\r\n}\r\n\r\n// 带批注的内容生成\r\nconst annotatedContent = computed(() => {\r\n    let content = originalText\r\n    const spans = []\r\n\r\n    // 按倒序插入避免位置偏移\r\n    annotations.value.slice().reverse().forEach(ann => {\r\n        const highlight = `<span class=\"annotation\" data-comment=\"${ann.comment}\">${originalText.slice(ann.startOffset, ann.endOffset)}</span>`\r\n        content =\r\n            content.slice(0, ann.startOffset) +\r\n            highlight +\r\n            content.slice(ann.endOffset)\r\n    })\r\n\r\n    return content\r\n})\r\n\r\n// 初始化（从字符串加载）\r\nfunction initAnnotations(annotationStr) {\r\n    try {\r\n        annotations.value = JSON.parse(annotationStr)\r\n    } catch {\r\n        annotations.value = []\r\n    }\r\n}\r\n\r\n// 示例初始化\r\nonMounted(() => {\r\n    // 从存储加载示例\r\n    // initAnnotations(localStorage.getItem('annotations'))\r\n})\r\n</script>\r\n  \r\n<style>\r\n.annotation {\r\n    background-color: yellow;\r\n    cursor: pointer;\r\n    position: relative;\r\n}\r\n\r\n.annotation:hover::after {\r\n    content: attr(data-comment);\r\n    position: absolute;\r\n    background: white;\r\n    border: 1px solid #ccc;\r\n    padding: 8px;\r\n    z-index: 100;\r\n    top: 100%;\r\n    left: 0;\r\n}\r\n</style>"]}]}