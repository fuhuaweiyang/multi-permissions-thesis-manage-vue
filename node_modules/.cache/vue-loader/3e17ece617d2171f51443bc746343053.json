{"remainingRequest":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\src\\views\\teacher\\Detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\src\\views\\teacher\\Detail.vue","mtime":1744204056699},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711182484313},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\babel-loader\\lib\\index.js","mtime":1711182482575},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711182484313},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1711182506214}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Detail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"Detail.vue","sourceRoot":"src/views/teacher","sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <button @click=\"changeCommitModel\">加载数据</button>\r\n    <!-- 文章内容区域 -->\r\n    <div class=\"article-content\" @mouseup=\"handleTextSelection\" v-html=\"annotatedContent\"></div>\r\n\r\n    <!-- 批注输入弹窗 -->\r\n    <div v-if=\"showCommentInput\" class=\"annotation-modal\">\r\n      <div class=\"selected-text\">选中的文本：{{ selectedText }}</div>\r\n      <textarea v-model=\"commentInput\" placeholder=\"请输入批注内容\"></textarea>\r\n      <button @click=\"saveAnnotation\">保存批注</button>\r\n      <button @click=\"cancelAnnotation\">取消</button>\r\n    </div>\r\n    <div v-if=\"CommitModel\" class=\"annotation-modal\">\r\n      <h3>提交总结批注</h3>\r\n      <textarea v-model=\"summaryContent\" placeholder=\"请输入文章总结\"></textarea>\r\n      <button @click=\"submitSummary\">确认提交</button>\r\n      <button @click=\"()=>{CommitModel=false}\">取消</button>\r\n    </div>\r\n\r\n    <!-- 批注展示 -->\r\n    <div class=\"annotations-list\">\r\n      <div v-for=\"(annotation, index) in annotations\" :key=\"index\" class=\"annotation-item\">\r\n        <span class=\"highlight\" @click=\"scrollToAnnotation(annotation)\">\r\n          {{ annotation.selectedText }}\r\n        </span>\r\n        <div class=\"comment\">{{ annotation.comment }}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\nimport axios from 'axios';\r\nimport { diff_match_patch } from '../../api/diff_match_patch'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      articleContent: `这里是一篇示例文章内容，包含多个段落。教师可以选中任意文本片段进行批注。\r\n          批注功能需要准确记录选中文本的位置和内容，并支持后续的展示和还原。`,\r\n      annotations: [],\r\n      selectedText: '',\r\n      selectedRange: null,\r\n      showCommentInput: false,\r\n      commentInput: '',\r\n      CommitModel: false,\r\n\r\n    };\r\n  },\r\n  mounted() {\r\n    this.loadData();\r\n  },\r\n  computed: {\r\n    // 生成包含批注标记的内容\r\n    annotatedContent() {\r\n      let content = this.articleContent;\r\n      this.annotations.forEach(anno => {\r\n        const highlight = `<span class=\"highlight\" data-id=\"${anno.id}\">${anno.selectedText}</span>`;\r\n        content = content.replace(anno.selectedText, highlight);\r\n      });\r\n      return content;\r\n    },\r\n\r\n    // 序列化批注信息\r\n    serializedAnnotations() {\r\n      return JSON.stringify(this.annotations);\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    changeCommitModel() {\r\n      console.log(this.CommitModel)\r\n      this.CommitModel = true;\r\n    },\r\n    async submitSummary() {\r\n      try{\r\n        const jsonAnnotations = JSON.stringify(this.annotations);\r\n        const response = await axios.post(\r\n          'http://localhost:9251/api/marking/save',\r\n          {\r\n            docId: localStorage.getItem('docId'),\r\n            modificationId: 6,\r\n            markingWhat: this.summaryContent,\r\n            marking: jsonAnnotations\r\n          },\r\n          {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          }\r\n        );\r\n      }catch(e) {\r\n        console.log(e)\r\n      }\r\n    },\r\n    async loadData() {\r\n      try {\r\n        // const response = await axios.get(\r\n        //     'http://localhost:9251/api/modification/getDocByModificationId/6/10',\r\n        // );\r\n        // console.log(response);\r\n        // this.patchText = response.data.modification\r\n        const docId = localStorage.getItem('docId');\r\n        console.log(docId)\r\n        const response2 = await axios.get(\r\n          'http://localhost:9251/api/docs/'+docId,\r\n        );\r\n        this.articleContent = response2.data.txt\r\n        // console.log(response2);\r\n        // console.log('原始补丁:', this.patchText)\r\n        // console.log('原始文本', this.oldText)\r\n        // const patches = this.dmp.patch_fromText(this.patchText)\r\n\r\n        // // 应用补丁并验证结果\r\n        // const [newText, results] = this.dmp.patch_apply(patches, this.oldText)\r\n        // if (results.some(success => !success)) {\r\n        //     throw new Error('部分补丁应用失败')\r\n        // }\r\n\r\n        // console.log('应用补丁后的新文本:', newText)\r\n\r\n        // // 生成标准差异\r\n        // const diffs = this.dmp.diff_main(this.oldText, newText)\r\n        // this.dmp.diff_cleanupSemantic(diffs)  // 优化差异显示\r\n\r\n        // console.log('标准差异:', !Array.isArray(diffs), !Array.isArray(diffs) || diffs.length < 2)\r\n        // // 处理差异结果\r\n        // this.generateLines(diffs)\r\n        // // this.pagination.total = response.data.data.total || 0;\r\n      } catch (error) {\r\n        console.error('请求异常:', error);\r\n        this.$message.error('数据加载失败');\r\n      }\r\n    },\r\n    handleTextSelection() {\r\n      const selection = window.getSelection();\r\n      if (!selection.rangeCount) return;\r\n\r\n      const range = selection.getRangeAt(0);\r\n      const selectedText = range.toString().trim();\r\n\r\n      if (selectedText) {\r\n        this.selectedText = selectedText;\r\n        this.selectedRange = range;\r\n        this.showCommentInput = true;\r\n      }\r\n    },\r\n\r\n    saveAnnotation() {\r\n      if (!this.commentInput) return;\r\n\r\n      const newAnnotation = {\r\n        id: Date.now(),\r\n        selectedText: this.selectedText,\r\n        comment: this.commentInput,\r\n        startOffset: this.selectedRange.startOffset,\r\n        endOffset: this.selectedRange.endOffset,\r\n        startContainerPath: this.getNodePath(this.selectedRange.startContainer),\r\n        endContainerPath: this.getNodePath(this.selectedRange.endContainer)\r\n      };\r\n\r\n      this.annotations.push(newAnnotation);\r\n      this.clearSelection();\r\n    },\r\n\r\n    cancelAnnotation() {\r\n      this.clearSelection();\r\n    },\r\n\r\n    clearSelection() {\r\n      this.showCommentInput = false;\r\n      this.commentInput = '';\r\n      window.getSelection().removeAllRanges();\r\n    },\r\n\r\n    // 将DOM节点路径转换为可序列化的路径\r\n    getNodePath(node) {\r\n      const path = [];\r\n      while (node.parentNode) {\r\n        path.push(Array.prototype.indexOf.call(node.parentNode.childNodes, node));\r\n        node = node.parentNode;\r\n      }\r\n      return path;\r\n    },\r\n\r\n    // 从序列化字符串加载批注\r\n    loadAnnotations(serialized) {\r\n      try {\r\n        this.annotations = JSON.parse(serialized).map(anno => ({\r\n          ...anno,\r\n          range: this.restoreRange(anno)\r\n        }));\r\n      } catch (e) {\r\n        console.error('解析批注失败:', e);\r\n      }\r\n    },\r\n\r\n    // 还原Range对象\r\n    restoreRange(annotation) {\r\n      const range = document.createRange();\r\n\r\n      let startNode = document.body;\r\n      annotation.startContainerPath.reverse().forEach(index => {\r\n        startNode = startNode.childNodes[index];\r\n      });\r\n\r\n      let endNode = document.body;\r\n      annotation.endContainerPath.reverse().forEach(index => {\r\n        endNode = endNode.childNodes[index];\r\n      });\r\n\r\n      range.setStart(startNode, annotation.startOffset);\r\n      range.setEnd(endNode, annotation.endOffset);\r\n      return range;\r\n    },\r\n\r\n    scrollToAnnotation(annotation) {\r\n      const element = document.querySelector(`[data-id=\"${annotation.id}\"]`);\r\n      if (element) {\r\n        element.scrollIntoView({ behavior: 'smooth' });\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n  \r\n<style>\r\n.container {\r\n  display: flex;\r\n  margin: 0 auto;\r\n}\r\n\r\n.article-content {\r\n  flex: 2;\r\n  padding: 20px;\r\n  line-height: 1.6;\r\n  border-right: 1px solid #ccc;\r\n}\r\n\r\n.annotations-list {\r\n  flex: 1;\r\n  padding: 20px;\r\n}\r\n\r\n.highlight {\r\n  background-color: #ffeb3b;\r\n  cursor: pointer;\r\n}\r\n\r\n.annotation-modal {\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: white;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  z-index: 1000;\r\n}\r\n\r\n.annotation-item {\r\n  margin-bottom: 15px;\r\n  padding: 10px;\r\n  border: 1px solid #eee;\r\n}\r\n</style>"]}]}