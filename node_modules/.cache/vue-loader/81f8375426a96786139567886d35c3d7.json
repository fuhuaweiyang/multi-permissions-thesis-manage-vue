{"remainingRequest":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\src\\views\\student\\ThesisOnline.vue?vue&type=style&index=0&id=33052d66&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\src\\views\\student\\ThesisOnline.vue","mtime":1746532144258},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1711182487975},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1711182506221},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\postcss-loader\\src\\index.js","mtime":1711182496599},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711182484313},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1711182506214}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoudGhlc2lzLXNlbGVjdGlvbiB7DQogIG1heC13aWR0aDogODAwcHg7DQogIG1hcmdpbjogMjBweCBhdXRvOw0KfQ0KDQoudGhlc2lzLWl0ZW0gew0KICBkaXNwbGF5OiBmbGV4Ow0KICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOw0KICBnYXA6IDhweDsNCn0NCg0KLnRoZXNpcy10aXRsZSB7DQogIGZvbnQtc2l6ZTogMTZweDsNCiAgZm9udC13ZWlnaHQ6IDUwMDsNCn0NCg0KLnRoZXNpcy1tZXRhIHsNCiAgZGlzcGxheTogZmxleDsNCiAgZ2FwOiAxNXB4Ow0KICBhbGlnbi1pdGVtczogY2VudGVyOw0KICBjb2xvcjogIzY2NjsNCiAgZm9udC1zaXplOiAxMnB4Ow0KfQ0KDQouZW1wdHktdGlwIHsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KICBjb2xvcjogIzk5OTsNCiAgcGFkZGluZzogMjBweDsNCn0NCg=="},{"version":3,"sources":["ThesisOnline.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+NA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"ThesisOnline.vue","sourceRoot":"src/views/student","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 论文题目选择页面 -->\r\n    <div v-if=\"!ifHaveThesis\" style=\"padding: 20px;\">\r\n      <h3>请选择论文题目</h3>\r\n\r\n      <el-table :data=\"paginatedTheses\" style=\"width: 100%;\">\r\n        <el-table-column prop=\"title\" label=\"论文标题\" />\r\n        <el-table-column prop=\"content\" label=\"论文要求\" width=\"100\" />\r\n        <el-table-column prop=\"teacherName\" label=\"创建人\" width=\"120\" />\r\n        <el-table-column prop=\"createTime\" label=\"创建时间\" width=\"180\" />\r\n        <el-table-column label=\"操作\" width=\"120\">\r\n          <template #default=\"scope\">\r\n            <el-button size=\"mini\" type=\"primary\" @click=\"confirmApplyThesis(scope.row)\">申请</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <div style=\"text-align: right; margin-top: 20px;\">\r\n        <el-pagination background layout=\"prev, pager, next\" :total=\"thesisList.length\" :page-size=\"pageSize\"\r\n          :current-page=\"currentPage\" @current-change=\"handlePageChange\" />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 作业提交页面 -->\r\n    <div v-else style=\"padding: 20px;\">\r\n\r\n      <el-input v-model=\"homeworkData.title\" placeholder=\"请输入标题\" style=\"margin-bottom: 10px;\"></el-input>\r\n      <el-input v-model=\"homeworkData.content\" placeholder=\"请输入内容\" type=\"textarea\"\r\n        style=\"margin-bottom: 10px;\"></el-input>\r\n\r\n      <el-upload class=\"upload-demo\" drag :auto-upload=\"false\" :multiple=\"true\" :on-change=\"handleFileChange\"\r\n        :before-remove=\"handleFileRemove\" ref=\"uploadRef\">\r\n        <el-icon class=\"el-icon--upload\" ><upload-filled /></el-icon>\r\n        <div class=\"el-upload__text\" style=\"font-size: 20px;\">\r\n          将文件拖到此处或<em style=\"font-size: 20px;\">点击上传</em>\r\n        </div>\r\n        <template #tip>\r\n          <div class=\"el-upload__tip\" style=\"font-size: 20px;\">\r\n            仅支持doc/docx文件\r\n          </div>\r\n        </template>\r\n      </el-upload>\r\n      <el-button type=\"danger\" @click=\"goOthers()\">返回</el-button>\r\n      <el-button type=\"success\" @click=\"submit\">提交</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport jsCookie from 'js-cookie';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      homeworkData: {\r\n        title: '',\r\n        content: ''\r\n      },\r\n      fileList: [],\r\n      ifHaveThesis: false, // 控制论文题目选择页面显示\r\n      thesisList: [], // 全部论文数据\r\n      currentPage: 1,\r\n      pageSize: 5,\r\n      thesisAndTeacher: []\r\n    };\r\n  },\r\n  computed: {\r\n    paginatedTheses() {\r\n      const start = (this.currentPage - 1) * this.pageSize;\r\n      const end = this.currentPage * this.pageSize;\r\n      return this.thesisList.slice(start, end);\r\n    }\r\n  },\r\n  created() {\r\n    this.checkThesis();\r\n    if (!this.ifHaveThesis) {\r\n      this.loadThesisList();\r\n    }\r\n  },\r\n  methods: {\r\n    async checkThesis() {\r\n      const response = await axios.get(\"http://localhost:9251/api/study/thesis/getThesisByStuId/\"+jsCookie.get('userId'))\r\n      console.log(response)\r\n      if(response.data.resultData) {\r\n        this.ifHaveThesis = true\r\n        this.thesisAndTeacher = response.data.resultData\r\n      }\r\n      console.log(this.thesisAndTeacher)\r\n      this.homeworkData.title = this.thesisAndTeacher.title\r\n    },\r\n    // 提交论文申请\r\n    async confirmApplyThesis(thesis) {\r\n      console.log(thesis)\r\n      try {\r\n        await this.$confirm(\r\n          `确定要申请题目「${thesis.title}」吗？`,\r\n          '确认申请',\r\n          {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning',\r\n          }\r\n        );\r\n\r\n        // 发送申请请求\r\n        const res = await axios.post('http://localhost:9251/api/study/thesis/apply',{\r\n          thesisId: thesis.id,\r\n          studentId: jsCookie.get('userId'),\r\n          teacherId: thesis.teacherId\r\n        });\r\n        console.log(res);\r\n        if (res.data.code==200) {\r\n          this.$message.success('申请成功');\r\n          // 可选：刷新列表或禁用该题目\r\n        } else {\r\n          this.$message.error(res.data.message || '申请失败');\r\n        }\r\n\r\n      } catch (err) {\r\n        if (err !== 'cancel') {\r\n          this.$message.error('申请已取消或发生错误');\r\n        }\r\n      }\r\n    },\r\n\r\n    goOthers() {\r\n      // 你的返回逻辑\r\n      this.$message.info(\"返回上一页\");\r\n    },\r\n\r\n    handlePageChange(page) {\r\n      this.currentPage = page;\r\n    },\r\n\r\n    async loadThesisList() {\r\n      try {\r\n        const res = await axios.get('http://localhost:9251/api/study/thesis/list'); // 假设这是获取论文的接口\r\n        console.log(res);\r\n        this.thesisList = res.data.resultData.data || [];\r\n        console.log(res);\r\n      } catch (e) {\r\n        this.$message.error('加载论文题目失败');\r\n      }\r\n    },\r\n\r\n    selectThesis(thesis) {\r\n      this.$message.success(`已选择题目：${thesis.title}`);\r\n      // 设置题目内容到编辑区（可选）\r\n      this.homeworkData.title = thesis.title;\r\n      this.homeworkData.content = thesis.content;\r\n      this.ifHaveThesis = false;\r\n    },\r\n\r\n    handleFileChange(file, fileList) {\r\n      const validTypes = ['application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];\r\n      const isDoc = validTypes.includes(file.raw.type) ||\r\n        file.raw.name.endsWith('.doc') ||\r\n        file.raw.name.endsWith('.docx');\r\n      const isLt500KB = file.raw.size / 1024 < 500;\r\n\r\n      if (!isDoc) {\r\n        this.$message.error('只能上传doc/docx格式文件');\r\n        return false;\r\n      }\r\n      if (!isLt500KB) {\r\n        this.$message.error('文件大小不能超过500KB');\r\n        return false;\r\n      }\r\n\r\n      this.fileList = fileList;\r\n      return false;\r\n    },\r\n\r\n    handleFileRemove(file, fileList) {\r\n      this.fileList = fileList;\r\n    },\r\n\r\n    async submit() {\r\n      if (!this.homeworkData.title.trim()) {\r\n        this.$message.error('请输入标题');\r\n        return;\r\n      }\r\n      if (!this.homeworkData.content.trim()) {\r\n        this.$message.error('请输入内容');\r\n        return;\r\n      }\r\n      if (this.fileList.length === 0) {\r\n        this.$message.error('请选择要上传的文件');\r\n        return;\r\n      }\r\n\r\n      const formData = new FormData();\r\n      formData.append('title', this.homeworkData.title);\r\n      formData.append('content', this.homeworkData.content);\r\n      formData.append('userId', jsCookie.get('userId'));\r\n      formData.append('teacherId', this.thesisAndTeacher.teacher_id);\r\n      this.fileList.forEach(file => {\r\n        formData.append('files', file.raw);\r\n      });\r\n\r\n      try {\r\n        const response = await axios.post('http://localhost:9251/api/docs/upload', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          }\r\n        });\r\n\r\n        this.$message.success('提交成功');\r\n        this.homeworkData = { title: '', content: '' };\r\n        this.fileList = [];\r\n        this.$refs.uploadRef.clearFiles();\r\n      } catch (error) {\r\n        this.$message.error('提交失败');\r\n        console.error('上传错误:', error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.thesis-selection {\r\n  max-width: 800px;\r\n  margin: 20px auto;\r\n}\r\n\r\n.thesis-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n}\r\n\r\n.thesis-title {\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n}\r\n\r\n.thesis-meta {\r\n  display: flex;\r\n  gap: 15px;\r\n  align-items: center;\r\n  color: #666;\r\n  font-size: 12px;\r\n}\r\n\r\n.empty-tip {\r\n  text-align: center;\r\n  color: #999;\r\n  padding: 20px;\r\n}\r\n</style>"]}]}