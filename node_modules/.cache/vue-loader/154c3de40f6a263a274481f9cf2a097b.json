{"remainingRequest":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\src\\views\\teacher\\StudentInfo.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\src\\views\\teacher\\StudentInfo.vue","mtime":1744203759373},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1711182487975},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1711182506221},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\postcss-loader\\src\\index.js","mtime":1711182496599},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711182484313},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1711182506214}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLyog5paw5aKe5qC35byPICovDQouZWwtdGFibGUtLWVuYWJsZS1yb3ctaG92ZXIgLmVsLXRhYmxlX19ib2R5IHRyOmhvdmVyPnRkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmN2ZhOw0KfQ0KDQovKiDljp/mnInmoLflvI/kv53mjIHkuI3lj5ggKi8NCg=="},{"version":3,"sources":["StudentInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyLA;AACA;AACA;AACA;;AAEA","file":"StudentInfo.vue","sourceRoot":"src/views/teacher","sourcesContent":["<template>\r\n    <div>\r\n        <el-table :data=\"tableData\" :default-sort=\"{ prop: 'date', order: 'descending' }\" style=\"width: 100%\">\r\n            <!-- 原有列保持不变 -->\r\n            <el-table-column sortable prop=\"account\" label=\"账号\" width=\"180\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"userName\" label=\"姓名\" width=\"180\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"phone\" label=\"学生电话\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"sexName\" label=\"性别\">\r\n            </el-table-column>\r\n\r\n            <el-table-column label=\"操作\" width=\"260\" fixed=\"right\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button type=\"primary\" @click=\"handleViewProgress(scope.row)\"> 查看论文进度\r\n                    </el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n\r\n        <!-- 分页组件保持不变 -->\r\n        <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"page.page\"\r\n            :page-sizes=\"[10, 20, 30, 40]\" :page-size=\"page.pageSize\" layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"tableData.length\">\r\n        </el-pagination>\r\n\r\n        <!-- 历史记录弹窗 -->\r\n        <el-dialog title=\"论文修改历史\" :visible.sync=\"dialogVisible\" width=\"60%\">\r\n            <el-table :data=\"historyRecords\" @row-click=\"handleHistoryClick\" style=\"cursor: pointer\">\r\n                <el-table-column prop=\"modificationTime\" label=\"修改时间\" width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"docId\" label=\"论文Id\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"modificationWhat\" label=\"修改标题\" width=\"120\">\r\n                </el-table-column>\r\n            </el-table>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { tclassmanagemt, deleteStudent } from \"../../api/teacher/teacherclass.js\";\r\nimport { mapState } from 'vuex'\r\nimport Cookies from 'js-cookie'\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n    name: \"StudentInfo\",\r\n\r\n    data() {\r\n        return {\r\n            // 原有数据保持不变\r\n            tableData: [],\r\n            dialogVisible: false,\r\n            pagination: {         // 分页对象\r\n                page: 1,\r\n                total: 0\r\n            },\r\n            historyRecords: [ // 示例数据\r\n            {\r\n                modificationTime: '',\r\n                docId: '',\r\n                modificationWhat: '',\r\n            }\r\n            ],\r\n            // 其他原有数据...\r\n            tableData: [],\r\n            page: {\r\n                page: 1, //初始页\r\n                pageSize: 10,    //    每页的数据\r\n                userId: ''\r\n            },\r\n            form: {\r\n                userName: '',\r\n                account: '',\r\n                phone: '',\r\n                className: '',\r\n            },\r\n            formLabelWidth: '120px',\r\n            param: {\r\n                userId: '',\r\n            }\r\n        }\r\n    },\r\n    created() {\r\n        this.page.userId = Cookies.get('userId')\r\n        this.listAllClass(this.page)\r\n    },\r\n    methods: {\r\n        async handleViewProgress(row) {\r\n            this.dialogVisible = true;\r\n\r\n            console.log(row)\r\n            try {\r\n                const response = await axios.post(\r\n                    'http://localhost:9251/api/modification/getModification',\r\n                    {\r\n                        stuId: row.userId,  //row.userid\r\n                        page: 1,\r\n                        pageSize: 10\r\n                    },\r\n                    {\r\n                        headers: { 'Content-Type': 'application/json' }\r\n                    }\r\n                );\r\n                console.log(response);\r\n                this.historyRecords = response.data || [];\r\n            //     historyRecords: [ // 示例数据\r\n            //     {\r\n            //         date: '2023-07-20',\r\n            //         version: 'v2.1',\r\n            //         status: '已通过',\r\n            //         reviewer: '王教授',\r\n            //         paperId: '123'\r\n            //     },\r\n            //     {\r\n            //         date: '2023-07-18',\r\n            //         version: 'v2.0',\r\n            //         status: '需修改',\r\n            //         reviewer: '李教授',\r\n            //         paperId: '123'\r\n            //     }\r\n            // ],\r\n                // this.pagination.total = response.data.data.total || 0;\r\n            } catch (error) {\r\n                console.error('请求异常:', error);\r\n                this.$message.error('数据加载失败');\r\n            }\r\n        },\r\n\r\n        handleHistoryClick(record) {\r\n            // 跳转到论文详情页\r\n            console.log('点击了记录：', record);\r\n            localStorage.setItem('docModificationrecord', JSON.stringify(record));\r\n            localStorage.setItem('docId', record.docId);\r\n            const savedRecord = JSON.parse(localStorage.getItem('docModificationrecord'));\r\n            this.$router.push({\r\n                name: 'Detail',\r\n                query: {\r\n                    type: \"试题\"\r\n                },\r\n                data1: 'test'\r\n            })\r\n        },\r\n        handleDelete(index, row) {\r\n            this.param.userId = row.userId\r\n            deleteStudent(this.param).then(resp => {\r\n                if (resp.data.code == 200) {\r\n                    this.$message({\r\n                        message: '移除学生成功 ',\r\n                        type: 'success'\r\n                    });\r\n                    this.dialogFormVisibleEdit = true\r\n                    this.listAllClass(this.page)\r\n                } else {\r\n                    this.$message.error('移除学生失败');\r\n                }\r\n            })\r\n        },\r\n        handleSizeChange(size) {\r\n            this.page.pageSize = size;\r\n            // console.log(this.pageSize,'888')\r\n            this.listAllClass(this.page)\r\n            console.log(`每页 ${size} 条`);\r\n        },\r\n        handleCurrentChange(pageNum) {\r\n            this.page.pageNum = pageNum;\r\n            this.listAllClass(this.page)\r\n            console.log(`当前页: ${val}`);\r\n        },\r\n\r\n        listAllClass(page) {\r\n            tclassmanagemt(page).then(resp => {\r\n                this.tableData = resp.data.resultData.data\r\n                console.log(this.tableData)\r\n            })\r\n        },\r\n        // 其他原有方法保持不变...\r\n    },\r\n    // 其他原有代码...\r\n}\r\n</script>\r\n\r\n<style>\r\n/* 新增样式 */\r\n.el-table--enable-row-hover .el-table__body tr:hover>td {\r\n    background-color: #f5f7fa;\r\n}\r\n\r\n/* 原有样式保持不变 */\r\n</style>"]}]}