{"remainingRequest":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\src\\views\\teacher\\StudentInfo.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\src\\views\\teacher\\StudentInfo.vue","mtime":1746578316605},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1711182487975},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1711182506221},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\postcss-loader\\src\\index.js","mtime":1711182496599},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711182484313},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1711182506214}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5lbC10YWJsZS0tZW5hYmxlLXJvdy1ob3ZlciAuZWwtdGFibGVfX2JvZHkgdHI6aG92ZXI+dGQgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNmNWY3ZmE7DQp9DQoNCi8qIOWFtuS7luagt+W8j+S/neaMgeS4jeWPmCAqLw0K"},{"version":3,"sources":["StudentInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwNA;AACA;AACA;;AAEA","file":"StudentInfo.vue","sourceRoot":"src/views/teacher","sourcesContent":["<template>\r\n    <div>\r\n        <!-- 修改后的广播按钮 -->\r\n        <el-button type=\"primary\" plain @click=\"handleBroadcast\">向全班广播消息</el-button>\r\n\r\n        <!-- 新增广播弹窗 -->\r\n        <el-dialog title=\"班级广播\" :visible.sync=\"dialogBroadcastVisible\" width=\"30%\">\r\n            <el-form :model=\"broadcastForm\" label-width=\"80px\">\r\n                <el-form-item label=\"标题\">\r\n                    <el-input v-model=\"broadcastForm.title\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"内容\">\r\n                    <el-input type=\"textarea\" :rows=\"4\" v-model=\"broadcastForm.content\" placeholder=\"请输入广播内容\">\r\n                    </el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"dialogBroadcastVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"sendBroadcast\">确 定</el-button>\r\n            </span>\r\n        </el-dialog>\r\n\r\n        <!-- 原有表格 -->\r\n        <el-table :data=\"tableData\" :default-sort=\"{ prop: 'date', order: 'descending' }\" style=\"width: 100%\">\r\n            <el-table-column sortable prop=\"account\" label=\"账号\" width=\"180\"></el-table-column>\r\n            <el-table-column prop=\"userName\" label=\"姓名\" width=\"180\"></el-table-column>\r\n            <el-table-column prop=\"phone\" label=\"学生电话\"></el-table-column>\r\n            <el-table-column prop=\"sexName\" label=\"性别\"></el-table-column>\r\n            <el-table-column label=\"操作\" width=\"260\" fixed=\"right\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button type=\"primary\" @click=\"handleViewProgress(scope.row)\">查看论文进度</el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n\r\n        <!-- 分页组件 -->\r\n        <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"page.page\"\r\n            :page-sizes=\"[10, 20, 30, 40]\" :page-size=\"page.pageSize\" layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"tableData.length\">\r\n        </el-pagination>\r\n\r\n        <!-- 历史记录弹窗 -->\r\n        <el-dialog title=\"论文修改历史\" :visible.sync=\"dialogVisible\" width=\"60%\">\r\n            <el-table :data=\"historyRecords\" @row-click=\"handleHistoryClick\" style=\"cursor: pointer\">\r\n                <el-table-column prop=\"modificationTime\" label=\"修改时间\" width=\"180\"></el-table-column>\r\n                <el-table-column prop=\"docId\" label=\"论文Id\"></el-table-column>\r\n                <el-table-column prop=\"docId\" label=\"论文Id\"></el-table-column>\r\n                <el-table-column prop=\"modificationWhat\" label=\"修改标题\" width=\"120\"></el-table-column>\r\n            </el-table>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { tclassmanagemt, deleteStudent } from \"../../api/teacher/teacherclass.js\";\r\n\r\nimport Cookies from 'js-cookie'\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n    name: \"StudentInfo\",\r\n\r\n    data() {\r\n        return {\r\n            // 新增广播相关数据\r\n            dialogBroadcastVisible: false,\r\n            broadcastForm: {\r\n                title: '',\r\n                content: '',\r\n                classId: '',\r\n                creator: ''\r\n            },\r\n\r\n            // 原有数据\r\n            tableData: [],\r\n            dialogVisible: false,\r\n            pagination: {\r\n                page: 1,\r\n                total: 0\r\n            },\r\n            historyRecords: [],\r\n            page: {\r\n                page: 1,\r\n                pageSize: 10,\r\n                userId: ''\r\n            },\r\n            form: {\r\n                userName: '',\r\n                account: '',\r\n                phone: '',\r\n                className: '',\r\n            },\r\n            formLabelWidth: '120px',\r\n            param: {\r\n                userId: '',\r\n            },\r\n            classIdList: []\r\n        }\r\n    },\r\n\r\n    mounted() {\r\n        this.page.userId = Cookies.get('userId')\r\n        this.listAllClass(this.page)\r\n        axios.post(\"http://localhost:9251/study/class/findListByUserId/\" + Cookies.get('userId')).then(response => {\r\n            this.classIdList = response.data.resultData\r\n        })\r\n    },\r\n\r\n    methods: {\r\n        // 新增广播方法\r\n        async handleBroadcast() {\r\n            this.dialogBroadcastVisible = true;\r\n            this.broadcastForm = { title: '', content: '' };\r\n        },\r\n\r\n        async sendBroadcast() {\r\n            if (!this.broadcastForm.title.trim() || !this.broadcastForm.content.trim()) {\r\n                this.$message.warning('标题和内容不能为空');\r\n                return;\r\n            }\r\n            console.log('begin')\r\n            this.broadcastForm.classId = this.classIdList[0]\r\n            console.log(this.broadcastForm)\r\n            try {\r\n\r\n                const response = await axios.post(\r\n                    'http://localhost:9251/api/study/knowledgePoint/save',\r\n                    this.broadcastForm,\r\n                    {\r\n                        headers: { 'Content-Type': 'application/json' },\r\n                        withCredentials: true // 允许发送凭证\r\n                    }\r\n                )\r\n                console.log(response)\r\n                // if (response.data.code === 200) {\r\n                //     this.$message.success('广播发送成功');\r\n                //     this.dialogBroadcastVisible = false;\r\n                // } else {\r\n                //     this.$message.error('发送失败: ' + (response.data.message || ''));\r\n                // }\r\n            } catch (error) {\r\n                console.error('发送失败:', error);\r\n                this.$message.error('广播发送失败');\r\n            }\r\n        },\r\n\r\n        // 原有方法保持不变\r\n        async handleViewProgress(row) {\r\n            this.dialogVisible = true;\r\n            try {\r\n                const response = await axios.post(\r\n                    'http://localhost:9251/api/modification/getModification',\r\n                    { stuId: row.userId, page: 1, pageSize: 10 },\r\n                    { headers: { 'Content-Type': 'application/json' } }\r\n                );\r\n                this.historyRecords = response.data || [];\r\n                console.log(this.historyRecords);\r\n            } catch (error) {\r\n                console.error('请求异常:', error);\r\n                this.$message.error('数据加载失败');\r\n            }\r\n        },\r\n\r\n        handleHistoryClick(record) {\r\n            console.log('点击了记录：', record);\r\n            const idx = this.historyRecords.findIndex(item => item.id === record.id);\r\n\r\n            // 计算前一个元素的索引\r\n            const prevIdx = idx > 0 ? idx - 1 : -1;\r\n\r\n            // 存在前一个元素，则取出并保存\r\n            const prevRow = this.historyRecords[prevIdx];\r\n            console.log('前一个元素：', prevRow);\r\n            localStorage.setItem('prevModification', JSON.stringify(prevRow));\r\n            localStorage.setItem('modification', JSON.stringify(record));\r\n            // 跳转到对比页面\r\n            this.$router.push({\r\n                name: 'ModificationCompare',\r\n            });\r\n            localStorage.setItem('docId', record.docId);\r\n            localStorage.setItem('modificationId', record.id);\r\n            this.$router.push({ name: 'Detail', query: { type: \"试题\" } });\r\n        },\r\n\r\n        handleDelete(index, row) {\r\n            this.param.userId = row.userId\r\n            deleteStudent(this.param).then(resp => {\r\n                if (resp.data.code == 200) {\r\n                    this.$message.success('移除学生成功');\r\n                    this.listAllClass(this.page)\r\n                } else {\r\n                    this.$message.error('移除学生失败');\r\n                }\r\n            })\r\n        },\r\n\r\n        handleSizeChange(size) {\r\n            this.page.pageSize = size;\r\n            this.listAllClass(this.page)\r\n        },\r\n\r\n        handleCurrentChange(pageNum) {\r\n            this.page.page = pageNum;\r\n            this.listAllClass(this.page)\r\n        },\r\n\r\n        listAllClass(page) {\r\n            tclassmanagemt(page).then(resp => {\r\n                this.tableData = resp.data.resultData.data\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.el-table--enable-row-hover .el-table__body tr:hover>td {\r\n    background-color: #f5f7fa;\r\n}\r\n\r\n/* 其他样式保持不变 */\r\n</style>"]}]}