{"remainingRequest":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\src\\views\\student\\MarkDownNotHomeWork.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\src\\views\\student\\MarkDownNotHomeWork.vue","mtime":1744718715707},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\babel.config.js","mtime":1711182475899},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711182484313},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\babel-loader\\lib\\index.js","mtime":1711182482575},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711182484313},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1711182506214}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MarkDownNotHomeWork.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 论文题目选择页面 -->\r\n    <div v-if=\"!ifHaveThesis\" style=\"padding: 20px;\">\r\n      <h3>请选择论文题目</h3>\r\n\r\n      <el-table :data=\"paginatedTheses\" style=\"width: 100%;\">\r\n        <el-table-column prop=\"title\" label=\"论文标题\" />\r\n        <el-table-column prop=\"content\" label=\"论文要求\" width=\"100\" />\r\n        <el-table-column prop=\"teacherName\" label=\"创建人\" width=\"120\" />\r\n        <el-table-column prop=\"createTime\" label=\"创建时间\" width=\"180\" />\r\n        <el-table-column label=\"操作\" width=\"120\">\r\n          <template #default=\"scope\">\r\n            <el-button size=\"mini\" type=\"primary\" @click=\"confirmApplyThesis(scope.row)\">申请</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <div style=\"text-align: right; margin-top: 20px;\">\r\n        <el-pagination background layout=\"prev, pager, next\" :total=\"thesisList.length\" :page-size=\"pageSize\"\r\n          :current-page=\"currentPage\" @current-change=\"handlePageChange\" />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 作业提交页面 -->\r\n    <div v-else style=\"padding: 20px;\">\r\n      <el-button type=\"danger\" @click=\"goOthers()\">返回</el-button>\r\n      <el-button type=\"success\" @click=\"submit\">提交</el-button>\r\n\r\n      <el-input v-model=\"homeworkData.title\" placeholder=\"请输入标题\" style=\"margin-bottom: 10px;\"></el-input>\r\n      <el-input v-model=\"homeworkData.content\" placeholder=\"请输入内容\" type=\"textarea\"\r\n        style=\"margin-bottom: 10px;\"></el-input>\r\n\r\n      <el-upload class=\"upload-demo\" drag :auto-upload=\"false\" :multiple=\"true\" :on-change=\"handleFileChange\"\r\n        :before-remove=\"handleFileRemove\" ref=\"uploadRef\">\r\n        <el-icon class=\"el-icon--upload\"><upload-filled /></el-icon>\r\n        <div class=\"el-upload__text\">\r\n          将文件拖到此处或<em>点击上传</em>\r\n        </div>\r\n        <template #tip>\r\n          <div class=\"el-upload__tip\">\r\n            仅支持500kb以下的doc/docx文件\r\n          </div>\r\n        </template>\r\n      </el-upload>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport jsCookie from 'js-cookie';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      homeworkData: {\r\n        title: '',\r\n        content: ''\r\n      },\r\n      fileList: [],\r\n      ifHaveThesis: false, // 控制论文题目选择页面显示\r\n      thesisList: [], // 全部论文数据\r\n      currentPage: 1,\r\n      pageSize: 5,\r\n    };\r\n  },\r\n  computed: {\r\n    paginatedTheses() {\r\n      const start = (this.currentPage - 1) * this.pageSize;\r\n      const end = this.currentPage * this.pageSize;\r\n      return this.thesisList.slice(start, end);\r\n    }\r\n  },\r\n  created() {\r\n    if (this.ifHaveThesis) {\r\n      this.loadThesisList();\r\n    }\r\n    this.checkThesis();\r\n  },\r\n  methods: {\r\n    async checkThesis() {\r\n      const response = await axios.get(\"http://localhost:9251/api/docs/stu/\"+jsCookie.get('userId'))\r\n      console.log(response)\r\n      if(response.data.id) {\r\n        this.ifHaveThesis = true\r\n      }\r\n    },\r\n    // 提交论文申请\r\n    async confirmApplyThesis(thesis) {\r\n      console.log(thesis)\r\n      try {\r\n        await this.$confirm(\r\n          `确定要申请题目「${thesis.title}」吗？`,\r\n          '确认申请',\r\n          {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning',\r\n          }\r\n        );\r\n\r\n        // 发送申请请求\r\n        const res = await axios.post('http://localhost:9251/api/study/thesis/apply/'+thesis.id+\"/\"+jsCookie.get('userId'));\r\n        console.log(res);\r\n        if (res.data.code==200) {\r\n          this.$message.success('申请成功');\r\n          // 可选：刷新列表或禁用该题目\r\n        } else {\r\n          this.$message.error(res.data.message || '申请失败');\r\n        }\r\n\r\n      } catch (err) {\r\n        if (err !== 'cancel') {\r\n          this.$message.error('申请已取消或发生错误');\r\n        }\r\n      }\r\n    },\r\n\r\n    goOthers() {\r\n      // 你的返回逻辑\r\n      this.$message.info(\"返回上一页\");\r\n    },\r\n\r\n    handlePageChange(page) {\r\n      this.currentPage = page;\r\n    },\r\n\r\n    async loadThesisList() {\r\n      try {\r\n        const res = await axios.get('http://localhost:9251/api/study/thesis/list'); // 假设这是获取论文的接口\r\n        console.log(res);\r\n        this.thesisList = res.data.resultData.data || [];\r\n        console.log(res);\r\n      } catch (e) {\r\n        this.$message.error('加载论文题目失败');\r\n      }\r\n    },\r\n\r\n    selectThesis(thesis) {\r\n      this.$message.success(`已选择题目：${thesis.title}`);\r\n      // 设置题目内容到编辑区（可选）\r\n      this.homeworkData.title = thesis.title;\r\n      this.homeworkData.content = thesis.content;\r\n      this.ifHaveThesis = false;\r\n    },\r\n\r\n    handleFileChange(file, fileList) {\r\n      const validTypes = ['application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];\r\n      const isDoc = validTypes.includes(file.raw.type) ||\r\n        file.raw.name.endsWith('.doc') ||\r\n        file.raw.name.endsWith('.docx');\r\n      const isLt500KB = file.raw.size / 1024 < 500;\r\n\r\n      if (!isDoc) {\r\n        this.$message.error('只能上传doc/docx格式文件');\r\n        return false;\r\n      }\r\n      if (!isLt500KB) {\r\n        this.$message.error('文件大小不能超过500KB');\r\n        return false;\r\n      }\r\n\r\n      this.fileList = fileList;\r\n      return false;\r\n    },\r\n\r\n    handleFileRemove(file, fileList) {\r\n      this.fileList = fileList;\r\n    },\r\n\r\n    async submit() {\r\n      if (!this.homeworkData.title.trim()) {\r\n        this.$message.error('请输入标题');\r\n        return;\r\n      }\r\n      if (!this.homeworkData.content.trim()) {\r\n        this.$message.error('请输入内容');\r\n        return;\r\n      }\r\n      if (this.fileList.length === 0) {\r\n        this.$message.error('请选择要上传的文件');\r\n        return;\r\n      }\r\n\r\n      const formData = new FormData();\r\n      formData.append('title', this.homeworkData.title);\r\n      formData.append('content', this.homeworkData.content);\r\n      formData.append('userId', jsCookie.get('userId'));\r\n      this.fileList.forEach(file => {\r\n        formData.append('files', file.raw);\r\n      });\r\n\r\n      try {\r\n        const response = await axios.post('http://localhost:9251/api/docs/upload', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          }\r\n        });\r\n\r\n        this.$message.success('提交成功');\r\n        this.homeworkData = { title: '', content: '' };\r\n        this.fileList = [];\r\n        this.$refs.uploadRef.clearFiles();\r\n      } catch (error) {\r\n        this.$message.error('提交失败');\r\n        console.error('上传错误:', error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.thesis-selection {\r\n  max-width: 800px;\r\n  margin: 20px auto;\r\n}\r\n\r\n.thesis-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n}\r\n\r\n.thesis-title {\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n}\r\n\r\n.thesis-meta {\r\n  display: flex;\r\n  gap: 15px;\r\n  align-items: center;\r\n  color: #666;\r\n  font-size: 12px;\r\n}\r\n\r\n.empty-tip {\r\n  text-align: center;\r\n  color: #999;\r\n  padding: 20px;\r\n}\r\n</style>"],"sourceRoot":"src/views/student"}]}