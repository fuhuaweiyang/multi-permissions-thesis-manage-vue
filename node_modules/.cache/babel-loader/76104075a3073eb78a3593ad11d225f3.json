{"remainingRequest":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\src\\views\\student\\practice\\ModificationCompare.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\src\\views\\student\\practice\\ModificationCompare.vue","mtime":1745329798720},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\babel.config.js","mtime":1711182475899},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711182484313},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\babel-loader\\lib\\index.js","mtime":1711182482575},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711182484313},{"path":"C:\\Users\\18133\\Desktop\\在线学习系统\\源码\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1711182506214}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ModificationCompare.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <el-switch v-model=\"showDiff\" class=\"ml-2\" inline-prompt\r\n      style=\"--el-switch-on-color: #13ce66; --el-switch-off-color: #ff4949\" active-text=\"论文版本显示\" inactive-text=\"论文批注显示\" />\r\n    <div v-if=\"showDiff\" class=\"diff-page\">\r\n      <!-- 旧版本 -->\r\n      <div class=\"diff-column\">\r\n        <div class=\"header\">旧版本</div>\r\n        <div v-for=\"(line, index) in oldLines\" :key=\"'old-' + index\" class=\"line\"\r\n          :class=\"{ 'deleted': line.type === 'removed' }\">\r\n          <span class=\"line-number\">{{ line.oldNum || ' ' }}</span>\r\n          <span class=\"content\">{{ line.content }}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 新版本 -->\r\n      <div class=\"diff-column\">\r\n        <div class=\"header\">新版本</div>\r\n        <div v-for=\"(line, index) in newLines\" :key=\"'new-' + index\" class=\"line\"\r\n          :class=\"{ 'added': line.type === 'added' }\">\r\n          <span class=\"line-number\">{{ line.newNum || ' ' }}</span>\r\n          <span class=\"content\">{{ line.content }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-else class=\"container\">\r\n      <!-- 文章内容区域 -->\r\n      <div class=\"article-content\" @mouseup=\"handleTextSelection\" v-html=\"annotatedContent\"></div>\r\n      <!-- 批注展示 -->\r\n      <div class=\"annotations-list\">\r\n        <div v-for=\"(annotation, index) in annotations\" :key=\"index\" class=\"annotation-item\">\r\n          <span class=\"highlight\" @click=\"scrollToAnnotation(annotation)\">\r\n            {{ annotation.selectedText }}\r\n          </span>\r\n          <div class=\"comment\">{{ annotation.comment }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\nimport { diff_match_patch } from '../../../api/diff_match_patch'\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      dmp: new diff_match_patch(),\r\n      oldText: '原始文本内容\\n第二行原始内容\\n第三行原始内容',\r\n      patchText: '@@ -1,3 +1,4 @@\\n 原始文本内容\\n-第二行原始内容\\n+第二行修改后的内容\\n+新增的第四行内容\\n 第三行原始内容\\n',\r\n      oldLines: [],\r\n      newLines: [],\r\n      showDiff: true,\r\n      articleContent: `这里是一篇示例文章内容，包含多个段落。教师可以选中任意文本片段进行批注。\r\n          批注功能需要准确记录选中文本的位置和内容，并支持后续的展示和还原。`,\r\n      annotations: [],\r\n      selectedText: '',\r\n      selectedRange: null,\r\n      commentInput: '',\r\n    }\r\n  },\r\n  mounted() {\r\n    this.loadData()\r\n    this.processDiff()\r\n\r\n  },\r\n  computed: {\r\n    // 生成包含批注标记的内容\r\n    annotatedContent() {\r\n      let content = this.articleContent;\r\n      this.annotations.forEach(anno => {\r\n        const highlight = `<span class=\"highlight\" data-id=\"${anno.id}\">${anno.selectedText}</span>`;\r\n        content = content.replace(anno.selectedText, highlight);\r\n      });\r\n      return content;\r\n    },\r\n\r\n    // 序列化批注信息\r\n    serializedAnnotations() {\r\n      return JSON.stringify(this.annotations);\r\n    }\r\n  },\r\n  methods: {\r\n    async loadData() {\r\n      try {\r\n        const modification = JSON.parse(localStorage.getItem('modification'))\r\n        console.log(modification)\r\n        const response = await axios.get(\r\n          'http://localhost:9251/api/modification/getDocByModificationId/' + modification.docId + '/' + modification.id,\r\n        );\r\n        console.log(response);\r\n        this.patchText = response.data.modification\r\n        const response2 = await axios.get(\r\n          'http://localhost:9251/api/docs/' + modification.docId,\r\n        );\r\n        this.oldText = response2.data.txt\r\n        this.articleContent = response2.data.txt\r\n        console.log(response2);\r\n        console.log('原始补丁:', this.patchText)\r\n        console.log('原始文本', this.oldText)\r\n        const patches = this.dmp.patch_fromText(this.patchText)\r\n        try {\r\n          const response3 = await axios.get(\r\n            'http://localhost:9251/api/marking/getByDocId/' + modification.docId,\r\n          );\r\n          console.log(modification.docId);\r\n          console.log(response3)\r\n          this.annotations = JSON.parse(response3.data.marking)\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n        console.log(this.annotations)\r\n        // 应用补丁并验证结果\r\n        const [newText, results] = this.dmp.patch_apply(patches, this.oldText)\r\n        if (results.some(success => !success)) {\r\n          throw new Error('部分补丁应用失败')\r\n        }\r\n\r\n        // console.log('应用补丁后的新文本:', newText)\r\n\r\n        // 生成标准差异\r\n        const diffs = this.dmp.diff_main(this.oldText, newText)\r\n        this.dmp.diff_cleanupSemantic(diffs)  // 优化差异显示\r\n\r\n        console.log('标准差异:', !Array.isArray(diffs), !Array.isArray(diffs) || diffs.length < 2)\r\n        // 处理差异结果\r\n        this.generateLines(diffs)\r\n        // this.pagination.total = response.data.data.total || 0;\r\n      } catch (error) {\r\n        console.error('请求异常:', error);\r\n        this.$message.error('数据加载失败');\r\n      }\r\n    },\r\n    // async processDiff() {\r\n    //     try {\r\n    //         // 解析补丁\r\n    //         console.log('原始补丁:', this.patchText)\r\n    //         console.log('原始文本', this.oldText)\r\n    //         const patches = this.dmp.patch_fromText(this.patchText)\r\n\r\n    //         // 应用补丁并验证结果\r\n    //         const [newText, results] = this.dmp.patch_apply(patches, this.oldText)\r\n    //         if (results.some(success => !success)) {\r\n    //             throw new Error('部分补丁应用失败')\r\n    //         }\r\n\r\n    //         console.log('应用补丁后的新文本:', newText)\r\n\r\n    //         // 生成标准差异\r\n    //         const diffs = this.dmp.diff_main(this.oldText, newText)\r\n    //         this.dmp.diff_cleanupSemantic(diffs)  // 优化差异显示\r\n\r\n    //         console.log('标准差异:', !Array.isArray(diffs), !Array.isArray(diffs) || diffs.length < 2)\r\n    //         // 处理差异结果\r\n    //         this.generateLines(diffs)\r\n    //     } catch (error) {\r\n    //         console.error('处理差异失败:', error)\r\n    //         this.$message.error(`版本对比失败: ${error.message}`)\r\n    //     }\r\n    // },\r\n\r\n    generateLines(diffs) {\r\n      let oldLineNum = 1\r\n      let newLineNum = 1\r\n      const oldLines = []\r\n      const newLines = []\r\n\r\n      console.log(diffs)\r\n      // 安全遍历差异\r\n      diffs.forEach(diff => {\r\n        // 添加类型检查\r\n        // if (!Array.isArray(diff) || diff.length < 2) \r\n        // {\r\n        //     console.log('未安全通过类型检查', diff)\r\n        //     return\r\n        // }\r\n        // console.log('安全通过类型检查', diff[0])\r\n\r\n        const type = diff[0]\r\n        const content = diff[1]\r\n\r\n\r\n        // console.log('处理差异:', content)\r\n        // console.log('this.dmp.DIFF_DELETE:', this.dmp.DIFF_DELETE)\r\n        // console.log('this.dmp.DIFF_INSERT:', this.dmp.DIFF_INSERT)\r\n        // console.log('this.dmp.DIFF_EQUAL:', this.dmp.DIFF_EQUAL)\r\n        const lines = content.split('\\n').filter(l => l !== '')\r\n\r\n        console.log('处理差异:', lines)\r\n        switch (type) {\r\n          case 1:\r\n            oldLines.push({\r\n              content: content,\r\n              oldNum: oldLineNum++,\r\n              type: 'removed'\r\n            })\r\n            newLines.push({ type: 'empty' })\r\n            break\r\n\r\n          case -1:\r\n            newLines.push({\r\n              content: content,\r\n              newNum: newLineNum++,\r\n              type: 'added'\r\n            })\r\n            oldLines.push({ type: 'empty' })\r\n            break\r\n\r\n          default:  // DIFF_EQUAL\r\n            oldLines.push({\r\n              content: content,\r\n              oldNum: oldLineNum++,\r\n              type: 'same'\r\n            })\r\n            newLines.push({\r\n              content: content,\r\n              newNum: newLineNum++,\r\n              type: 'same'\r\n            })\r\n        }\r\n      })\r\n      this.oldLines = oldLines\r\n      this.newLines = newLines\r\n    },\r\n    handleTextSelection() {\r\n      const selection = window.getSelection();\r\n      if (!selection.rangeCount) return;\r\n\r\n      const range = selection.getRangeAt(0);\r\n      const selectedText = range.toString().trim();\r\n\r\n      if (selectedText) {\r\n        this.selectedText = selectedText;\r\n        this.selectedRange = range;\r\n        this.showCommentInput = true;\r\n      }\r\n    },\r\n\r\n    saveAnnotation() {\r\n      if (!this.commentInput) return;\r\n\r\n      const newAnnotation = {\r\n        id: Date.now(),\r\n        selectedText: this.selectedText,\r\n        comment: this.commentInput,\r\n        startOffset: this.selectedRange.startOffset,\r\n        endOffset: this.selectedRange.endOffset,\r\n        startContainerPath: this.getNodePath(this.selectedRange.startContainer),\r\n        endContainerPath: this.getNodePath(this.selectedRange.endContainer)\r\n      };\r\n\r\n      this.annotations.push(newAnnotation);\r\n      this.clearSelection();\r\n    },\r\n\r\n    cancelAnnotation() {\r\n      this.clearSelection();\r\n    },\r\n\r\n    clearSelection() {\r\n      this.showCommentInput = false;\r\n      this.commentInput = '';\r\n      window.getSelection().removeAllRanges();\r\n    },\r\n\r\n    // 将DOM节点路径转换为可序列化的路径\r\n    getNodePath(node) {\r\n      const path = [];\r\n      while (node.parentNode) {\r\n        path.push(Array.prototype.indexOf.call(node.parentNode.childNodes, node));\r\n        node = node.parentNode;\r\n      }\r\n      return path;\r\n    },\r\n\r\n    // 从序列化字符串加载批注\r\n    loadAnnotations(serialized) {\r\n      try {\r\n        this.annotations = JSON.parse(serialized).map(anno => ({\r\n          ...anno,\r\n          range: this.restoreRange(anno)\r\n        }));\r\n      } catch (e) {\r\n        console.error('解析批注失败:', e);\r\n      }\r\n    },\r\n\r\n    // 还原Range对象\r\n    restoreRange(annotation) {\r\n      const range = document.createRange();\r\n\r\n      let startNode = document.body;\r\n      annotation.startContainerPath.reverse().forEach(index => {\r\n        startNode = startNode.childNodes[index];\r\n      });\r\n\r\n      let endNode = document.body;\r\n      annotation.endContainerPath.reverse().forEach(index => {\r\n        endNode = endNode.childNodes[index];\r\n      });\r\n\r\n      range.setStart(startNode, annotation.startOffset);\r\n      range.setEnd(endNode, annotation.endOffset);\r\n      return range;\r\n    },\r\n\r\n    scrollToAnnotation(annotation) {\r\n      const element = document.querySelector(`[data-id=\"${annotation.id}\"]`);\r\n      if (element) {\r\n        element.scrollIntoView({ behavior: 'smooth' });\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n  \r\n<style scoped>\r\nhtml, body {\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n  overflow: auto;\r\n}\r\n\r\ndiv {\r\n  box-sizing: border-box;\r\n}\r\n\r\n:host {\r\n  display: block;\r\n  height: 100%;\r\n}\r\n\r\n.diff-page,\r\n.container {\r\n  overflow-y: auto;\r\n  max-height: 90vh;\r\n}\r\n\r\n.diff-page {\r\n  display: flex;\r\n  gap: 20px;\r\n  padding: 20px;\r\n  font-family: monospace;\r\n}\r\n\r\n.diff-column {\r\n  flex: 1;\r\n  border: 1px solid #e1e4e8;\r\n  border-radius: 6px;\r\n}\r\n\r\n.header {\r\n  padding: 10px;\r\n  background: #f6f8fa;\r\n  border-bottom: 1px solid #e1e4e8;\r\n  font-weight: bold;\r\n}\r\n\r\n.line {\r\n  display: flex;\r\n  padding: 2px 10px;\r\n}\r\n\r\n.line-number {\r\n  min-width: 40px;\r\n  color: rgba(27, 31, 35, .3);\r\n  padding-right: 10px;\r\n  user-select: none;\r\n}\r\n\r\n.deleted {\r\n  background-color: #ffeef0;\r\n}\r\n\r\n.added {\r\n  background-color: #e6ffed;\r\n}\r\n\r\n.content {\r\n  white-space: pre-wrap;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  margin: 0 auto;\r\n}\r\n\r\n.article-content {\r\n  flex: 2;\r\n  padding: 20px;\r\n  line-height: 1.6;\r\n  border-right: 1px solid #ccc;\r\n}\r\n\r\n.annotations-list {\r\n  flex: 1;\r\n  padding: 20px;\r\n}\r\n\r\n.highlight {\r\n  background-color: #ffeb3b;\r\n  cursor: pointer;\r\n}\r\n\r\n.annotation-modal {\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: white;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  z-index: 1000;\r\n}\r\n\r\n.annotation-item {\r\n  margin-bottom: 15px;\r\n  padding: 10px;\r\n  border: 1px solid #eee;\r\n}\r\n</style>"],"sourceRoot":"src/views/student/practice"}]}